---
import DashboardLayout from '../layouts/DashboardLayout.astro';
import { verifyToken } from '../services/auth';

// Verificar autenticación
const token = Astro.cookies.get('admin-token')?.value;
const admin = token ? await verifyToken(token) : null;

// Redirigir a login si no está autenticado
if (!admin) {
  return Astro.redirect('/admin/login');
}
---

<DashboardLayout title="Registro de Celular">
  <div class="max-w-md mx-auto mt-10 p-6 bg-white rounded-lg shadow-md">
    <h2 class="text-2xl font-bold mb-6 text-center">Registro de Celular</h2>

    <form id="phoneForm" class="space-y-4">
      <div>
        <label class="block text-sm font-medium text-gray-700">Nombre</label>
        <input
          type="text"
          name="nombre"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
        />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700">Celular</label>
        <input
          type="tel"
          name="celular"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
        />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700">Email</label>
        <input
          type="email"
          name="email"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
        />
      </div>

      <button
        type="submit"
        class="w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 transition-colors"
      >
        Registrar Celular
      </button>
    </form>

    <div id="message" class="mt-4 text-center hidden"></div>
  </div>
</DashboardLayout>

<script>
  const form = document.getElementById('phoneForm');
  const messageDiv = document.getElementById('message');

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);

    try {
      const response = await fetch('/api/phones', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(Object.fromEntries(formData)),
      });

      const data = await response.json();

      if (messageDiv) {
        messageDiv.textContent = data.message;
        messageDiv.className = `mt-4 text-center ${
          data.success ? 'text-green-600' : 'text-red-600'
        }`;
        messageDiv.classList.remove('hidden');
      }

      if (data.success) {
        (e.target as HTMLFormElement).reset();
      }
    } catch (error) {
      if (messageDiv) {
        messageDiv.textContent = 'Error al procesar la solicitud';
        messageDiv.className = 'mt-4 text-center text-red-600';
        messageDiv.classList.remove('hidden');
      }
    }
  });
</script>
